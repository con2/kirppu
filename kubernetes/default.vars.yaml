# App specific settings
kirppu_languages: fi

# NOTE: leave empty and set key extraDatabases in secret postgres manually if postgres_managed: false
# format: eventslug=postgres://user:pass@host/dbname,eventslug=...
kirppu_extra_databases: ''

# Kompassi OAuth2 (NOTE: do not set if djangoapp_secret_managed: false)
kompassi_client_id: ''
kompassi_client_secret: ''

# Legacy Kompassi API v1 (NOTE: leave empty if djangoapp_secret_managed: false)
kompassi_api_application_name: ''
kompassi_api_application_password: ''

# Note: If you use Skaffold/Emskaffolden, leave these at defaults and let Skaffold manage the images
djangoapp_name: kirppu
djangoapp_image: !Var djangoapp_name

# Whether the secret of the name !Var djangoapp_name is managed by these templates or manually created
djangoapp_secret_managed: true

# A list of "Full Name <email@example.com>", no commas
djangoapp_admins: []

# Workers _per pod_
djangoapp_workers: 4

smtp_server: ''
smtp_default_from_email: ''

# Set this to the public hostname of your service.
ingress_public_hostname: !Format "{djangoapp_name}.localhost"

# If you use ingress-nginx and cert-manager, TLS can be automatically configured by setting this to true.
ingress_letsencrypt_enabled: false
ingress_letsencrypt_cluster_issuer: letsencrypt-prod

# NOTE: "managed" PostgreSQL should not be considered production-ready.
postgres_managed: true
postgres_image: postgres
postgres_hostname: postgres
postgres_username: !Var djangoapp_name
postgres_database: !Var djangoapp_name
postgres_storage_pvc_storageclass: !Void

# Leave empty if you want to let kubernetes-secret-generator generate one for you
postgres_password: ''

# note: managed postgres doesn't provide ssl, only enable if using external postgres
postgres_ssl: false

# Whether or not "python manage.py migrate" should run as init container
setup_should_run: true

# Configuration vars end here. Configuration snippets follow. May be overridden for advanced configuration.

# Security context for djangoapp and Celery pods
# User 1000 is guaranteed to exist in the Docker image, only change if you know what you're doing
gunicorn_pod_security_context:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
gunicorn_container_security_context:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

# Common environment vars for both djangoapp and celery pods.
gunicorn_environment:
  - name: POSTGRES_HOSTNAME
    valueFrom:
      secretKeyRef:
        name: postgres
        key: hostname
  - name: POSTGRES_DATABASE
    valueFrom:
      secretKeyRef:
        name: postgres
        key: database
  - name: POSTGRES_USERNAME
    valueFrom:
      secretKeyRef:
        name: postgres
        key: username
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: postgres
        key: password
  - !If
      test: !Var postgres_ssl
      then:
        name: POSTGRES_EXTRAS
        value: '?sslmode=require'
  - name: SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: secretKey
  - name: KOMPASSI_OAUTH2_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiClientId
  - name: KOMPASSI_OAUTH2_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiClientSecret
  - name: ALLOWED_HOSTS
    value: !Var ingress_public_hostname
  - name: EMAIL_HOST
    value: !Var smtp_server
  - name: DEFAULT_FROM_EMAIL
    value: !Var smtp_default_from_email
  - name: ADMINS
    value: !Join
      items: !Var djangoapp_admins
      separator: ","
  - name: PROFILE_URL
    value: https://kompassi.eu/profile
  - name: LOGIN_URL
    value: /oauth2/login
  - name: LOGOUT_URL
    value: /oauth2/logout
  - name: KIRPPU_USE_SSO
    value: "1"
  - name: LANGUAGES
    value: !Var kirppu_languages
  - name: ASSUME_SSL_HEADER
    value: "HTTP_X_FORWARDED_PROTO=https"
  - name: KIRPPU_ALLOW_PROVISION_FUNCTIONS
    value: "1"
  - name: KOMPASSI_API_APPLICATION_NAME
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiApiApplicationName
  - name: KOMPASSI_API_APPLICATION_PASSWORD
    valueFrom:
      secretKeyRef:
        name: !Var djangoapp_name
        key: kompassiApiApplicationPassword

# Default annotations work for nginx ingress with or without LetsEncrypt TLS. Override if you need something else.
ingress_annotations: !If
  test: !Var ingress_letsencrypt_enabled
  then:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

ingress_tls: !If
  test: !Var ingress_letsencrypt_enabled
  then:
    - secretName: ingress-letsencrypt
      hosts:
        - !Var ingress_public_hostname
